// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-outside-of-docker
{
	"name": "Docker outside of Docker",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	// "image": "mcr.microsoft.com/devcontainers/base:bullseye",
    "build": {
        "dockerfile": "Dockerfile"
	},
	"customizations": {
		"vscode": {
			"extensions": [
				"Ionide.Ionide-fsharp",
				"adpyke.codesnap",
				"Dart-Code.dart-code",
				"EditorConfig.EditorConfig",
				"GitHub.copilot",
				"christian-kohler.npm-intellisense",
				"ionutvmi.path-autocomplete",
				"ms-python.vscode-pylance",
				"rust-lang.rust-analyzer",
				"tintoy.msbuild-project-tools",
				"eamodio.gitlens"
			],
			"settings": {
				"terminal.integrated.defaultProfile.linux": "zsh",
				// I don't know why but Ionide and C# extension don't find
				// the installed dotnet version.
				// For Ionide, we guide it using the following setting
				"FSharp.dotnetRoot": "/home/vscode/.dotnet",
				// For C#, we disable the warning as we don't seems to need it.
				// If this is a problem, we can probably use the C#/F# dockerfile
				// as the base and keep our way to install the different target version
				// .NET included to respect the global.json requirements
				"csharp.suppressDotnetInstallWarning": true
			}
		}
	}

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "docker --version",

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
